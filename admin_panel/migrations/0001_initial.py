# Generated by Django 5.0.6 on 2024-06-13 07:38

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('appconfig', '0001_initial'),
        ('community', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acct_name', models.CharField(max_length=20, unique=True)),
                ('acct_serial', models.CharField(max_length=12, unique=True)),
                ('acct_descr', models.TextField()),
                ('created_by', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='BillHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loc_id', models.TextField()),
                ('loc_desc', models.TextField()),
                ('bill_date', models.TextField()),
                ('bill_end_time', models.TextField()),
                ('clrk_code', models.TextField()),
                ('mech_no', models.IntegerField()),
                ('bill_no', models.IntegerField()),
                ('bill_amt', models.DecimalField(decimal_places=2, max_digits=60)),
                ('tax', models.DecimalField(decimal_places=2, max_digits=60)),
                ('paid_amt', models.DecimalField(decimal_places=2, max_digits=60)),
                ('bal_amt', models.DecimalField(decimal_places=2, max_digits=60)),
                ('billRef', models.TextField()),
                ('bill_type', models.CharField(max_length=3)),
                ('pay_mode', models.CharField(max_length=3)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BillTran',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mech_no', models.IntegerField()),
                ('bill_no', models.IntegerField()),
                ('tran_code', models.TextField()),
                ('tran_desc', models.TextField()),
                ('tran_amt', models.DecimalField(decimal_places=2, max_digits=60)),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=60)),
                ('billRef', models.TextField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('updated_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('name_of_head', models.TextField()),
                ('email_of_head', models.TextField()),
                ('phone_of_head', models.TextField()),
                ('description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Emails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_from', models.TextField()),
                ('sent_to', models.TextField()),
                ('subject', models.TextField()),
                ('body', models.TextField()),
                ('email_type', models.TextField()),
                ('ref', models.TextField()),
                ('cc', models.TextField(blank=True)),
                ('scheduled_on', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(default=0)),
                ('status_message', models.TextField(default='Scheduled')),
                ('sent_on', models.DateTimeField(auto_now=True)),
                ('attachments', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc', models.CharField(max_length=3)),
                ('cryp_key', models.CharField(max_length=60)),
                ('media', models.FileField(upload_to='static/uploads/%Y%m%d')),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Log500',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.TextField()),
                ('what', models.TextField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoggedIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue', models.CharField(max_length=100, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='LoggedIssueTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue', models.CharField(max_length=100)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.IntegerField(default=0)),
                ('title', models.CharField(max_length=100)),
                ('body', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MailGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=66, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PackingMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('descr', models.TextField()),
                ('created_by', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='PendingEscalations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=5)),
                ('issue', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.TextField()),
                ('created_by', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loc', models.CharField(max_length=3)),
                ('mech_no', models.TextField()),
                ('gross_sales', models.DecimalField(decimal_places=2, max_digits=60)),
                ('tax', models.DecimalField(decimal_places=2, max_digits=60)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=60)),
                ('net_sales', models.DecimalField(decimal_places=2, max_digits=60)),
                ('day', models.TextField()),
                ('place', models.TextField()),
                ('loc_desc', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TaskBranchHD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('br_name', models.TextField()),
                ('descr', models.TextField()),
                ('md_hash', models.CharField(max_length=60, unique=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskTrans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_uni', models.TextField()),
                ('tran_title', models.TextField()),
                ('tran_descr', models.TextField()),
                ('entry_date', models.DateField()),
                ('support_by', models.TextField(default='not set')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('owner', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TaxMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_code', models.CharField(max_length=2, unique=True)),
                ('tax_description', models.TextField()),
                ('tax_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='AuthToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.TextField()),
                ('description', models.TextField()),
                ('created_by', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('def_domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.tags')),
            ],
        ),
        migrations.CreateModel(
            name='EvatCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_ip', models.TextField(null=True)),
                ('server_location', models.TextField(null=True)),
                ('company_tin', models.CharField(max_length=20)),
                ('company_name', models.CharField(max_length=100, unique=True)),
                ('company_security_key', models.CharField(max_length=255)),
                ('inv_req', models.CharField(max_length=255, unique=True)),
                ('z_rez', models.CharField(max_length=255, unique=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('updated_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GeoCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('updated_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('descr', models.TextField()),
                ('server_location', models.TextField(null=True)),
                ('ip_address', models.TextField(null=True)),
                ('db', models.TextField(null=True)),
                ('db_user', models.TextField(null=True)),
                ('db_password', models.TextField(null=True)),
                ('created_by', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('evat_key', models.IntegerField(default=0)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdjHd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remark', models.TextField()),
                ('created_by', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=0)),
                ('loc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.locations')),
            ],
        ),
        migrations.CreateModel(
            name='MailQueues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient', models.EmailField(max_length=254)),
                ('subject', models.TextField()),
                ('body', models.TextField()),
                ('cc', models.TextField(blank=True)),
                ('scheduled_on', models.DateTimeField(auto_now_add=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_on', models.DateTimeField(auto_now=True)),
                ('sent_response', models.TextField(blank=True, default='NOT SENT')),
                ('group', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.mailgroup')),
            ],
        ),
        migrations.CreateModel(
            name='MailAttachments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(upload_to='static/attachments/')),
                ('mail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.mailqueues')),
            ],
        ),
        migrations.CreateModel(
            name='MailSenders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.TextField()),
                ('port', models.TextField()),
                ('address', models.CharField(max_length=200, unique=True)),
                ('password', models.TextField()),
                ('is_default', models.BooleanField(default=False)),
                ('is_tls', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('purpose', models.CharField(blank=True, max_length=200, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='mailqueues',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.mailsenders'),
        ),
        migrations.CreateModel(
            name='NotificationGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.TextField()),
                ('email_addr', models.TextField()),
                ('mobile_number', models.TextField()),
                ('group', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.emailgroup')),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(default=0)),
                ('title', models.TextField()),
                ('descr', models.TextField()),
                ('read', models.IntegerField(default=0)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationalUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
                ('description', models.TextField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now=True)),
                ('valid', models.IntegerField(verbose_name=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductGroupSub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.TextField()),
                ('created_by', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.productgroup')),
            ],
        ),
        migrations.CreateModel(
            name='ProductMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.TextField()),
                ('shrt_descr', models.TextField()),
                ('barcode', models.CharField(max_length=255, unique=True)),
                ('prod_img', models.FileField(upload_to='static/uploads/products/')),
                ('created_by', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.productgroup')),
                ('sub_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.productgroupsub')),
            ],
        ),
        migrations.CreateModel(
            name='AdjTran',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.IntegerField()),
                ('packing', models.TextField()),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=65)),
                ('total', models.IntegerField()),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.adjhd')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.productmaster')),
            ],
        ),
        migrations.CreateModel(
            name='ProductPacking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pack_qty', models.DecimalField(decimal_places=2, max_digits=60)),
                ('packing_type', models.CharField(default='U', max_length=1)),
                ('created_by', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('packing_un', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.packingmaster')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.productmaster')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTrans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc', models.CharField(max_length=2)),
                ('doc_ref', models.TextField()),
                ('tran_qty', models.DecimalField(decimal_places=2, max_digits=65)),
                ('created_by', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('loc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.locations')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.productmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('rem_date', models.DateField()),
                ('rem_time', models.TimeField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('updated_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('resp_code', models.TextField(default='null')),
                ('resp_message', models.TextField(default='null')),
                ('read_only', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SmsApi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(max_length=66, unique=True)),
                ('sender_id', models.TextField()),
                ('api_desc', models.TextField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('is_default', models.IntegerField(default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to', models.CharField(max_length=20)),
                ('message', models.TextField()),
                ('last_tried_date', models.TextField()),
                ('last_tried_time', models.TextField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=0)),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.smsapi')),
            ],
        ),
        migrations.CreateModel(
            name='BulkSms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='static/uploads/bsms/2024-06-13_07-38-26')),
                ('message', models.TextField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.smsapi')),
            ],
        ),
        migrations.CreateModel(
            name='SmsResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resp_code', models.TextField()),
                ('resp_msg', models.TextField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=0)),
                ('sms', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.sms')),
            ],
        ),
        migrations.CreateModel(
            name='SuppMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.TextField()),
                ('contact_person', models.TextField(default='NULL')),
                ('purch_group', models.TextField()),
                ('origin', models.TextField()),
                ('email', models.TextField()),
                ('mobile', models.TextField()),
                ('city', models.TextField()),
                ('street', models.TextField()),
                ('taxable', models.IntegerField(default=1)),
                ('created_by', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('bank_acct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.bankaccounts')),
            ],
        ),
        migrations.AddField(
            model_name='productmaster',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.suppmaster'),
        ),
        migrations.CreateModel(
            name='TaskBranchTran',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.TextField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.taskbranchhd')),
            ],
        ),
        migrations.CreateModel(
            name='TaskHD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_uni', models.TextField()),
                ('type', models.TextField()),
                ('ref', models.TextField()),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('added_on', models.DateTimeField(auto_now=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=0)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.tags')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='taskbranchhd',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.taskhd'),
        ),
        migrations.AddField(
            model_name='productmaster',
            name='tax',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.taxmaster'),
        ),
        migrations.CreateModel(
            name='TicketHd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('descr', models.TextField()),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=0)),
                ('app', models.TextField(default='Unknown')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TicketTrans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('tran', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=0)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.tickethd')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransferHD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loc_to', models.CharField(max_length=3)),
                ('remark', models.TextField()),
                ('created_by', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=0)),
                ('loc_fr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.locations')),
            ],
        ),
        migrations.CreateModel(
            name='TransferTran',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.IntegerField()),
                ('packing', models.TextField()),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=65)),
                ('total', models.IntegerField()),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.transferhd')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.productmaster')),
            ],
        ),
        migrations.CreateModel(
            name='UnitMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('ou', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.organizationalunit')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAddOns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(default='None')),
                ('company', models.TextField()),
                ('position', models.TextField()),
                ('country', models.TextField()),
                ('Address', models.TextField()),
                ('news', models.IntegerField(default=1)),
                ('phone', models.CharField(max_length=14, unique=True)),
                ('profile_pic', models.FileField(upload_to='static/uploads/users/')),
                ('pword_reset', models.IntegerField(default=1)),
                ('api_token', models.TextField(null=True)),
                ('auth_pin', models.CharField(max_length=200)),
                ('app_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appconfig.versionhistory')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.departments')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prim_noif', models.TextField(default='email')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.TextField()),
                ('email', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('updated_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('owner', 'email'), ('owner', 'phone')},
            },
        ),
        migrations.CreateModel(
            name='DocApprovals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_type', models.CharField(max_length=200)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'doc_type')},
            },
        ),
        migrations.CreateModel(
            name='GeoCitySub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('updated_time', models.TimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.geocity')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('city', 'name')},
            },
        ),
    ]
