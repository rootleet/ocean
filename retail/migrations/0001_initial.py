# Generated by Django 5.0.6 on 2024-06-13 07:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('admin_panel', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BoltGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=266, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=60, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=60, unique=True)),
                ('name', models.CharField(max_length=60, unique=True)),
                ('person', models.TextField()),
                ('phone', models.TextField()),
                ('email', models.TextField()),
                ('city', models.TextField()),
                ('country', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BoltItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(max_length=100, unique=True)),
                ('item_des', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=60)),
                ('price_diff', models.IntegerField(default=0)),
                ('inv_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=60)),
                ('stock_nia', models.IntegerField()),
                ('stock_spintex', models.IntegerField()),
                ('stock_osu', models.IntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.boltgroups')),
            ],
        ),
        migrations.CreateModel(
            name='Clerk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.TextField()),
                ('last_name', models.TextField()),
                ('phone', models.CharField(max_length=10, unique=True)),
                ('code', models.CharField(max_length=4, unique=True)),
                ('pword', models.TextField()),
                ('img', models.ImageField(default='static/general/img/users/default.png', upload_to='static/uploads/clerks/')),
                ('flag_dwn', models.IntegerField(default=1)),
                ('flag_disable', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.locations')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSubGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=60)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.productgroup')),
            ],
            options={
                'unique_together': {('group', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=60, unique=True)),
                ('barcode', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=60)),
                ('stock_monitor', models.BooleanField(default=False)),
                ('subgroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.productsubgroup')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_open', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('name', 'owner')},
            },
        ),
        migrations.CreateModel(
            name='RecipeProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('barcode', models.TextField()),
                ('si_unit', models.TextField()),
                ('is_open', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(default='static/recipe_card/recipe.png', upload_to='static/uploads/retail/products/')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.recipegroup')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('name', 'owner', 'group')},
            },
        ),
        migrations.CreateModel(
            name='StockHd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_no', models.CharField(max_length=10, unique=True)),
                ('date_kept', models.CharField(max_length=100)),
                ('remarks', models.TextField()),
                ('is_group', models.BooleanField(default=False)),
                ('st_grp', models.IntegerField()),
                ('end_grp', models.IntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('loc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.locations')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('quantity', models.TextField(default=0.0)),
                ('si_unit', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.recipeproduct')),
            ],
            options={
                'unique_together': {('name', 'owner', 'product')},
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('quantity', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.products')),
            ],
            options={
                'unique_together': {('product', 'location')},
            },
        ),
        migrations.CreateModel(
            name='StockMonitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=3)),
                ('stock_qty', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('valid', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('edited_on', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.products')),
            ],
            options={
                'unique_together': {('product', 'location')},
            },
        ),
    ]
